// MIT License
//
// Copyright (c) 2020, Speechly
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

syntax = "proto3";

package v1;

option optimize_for = SPEED;
option go_package = "speechly";

// Speechly written language understanding service
service WLU {
  // Send text and get the intents, entities and transcripts as a response.
  // *Note* The maximum message size is 16KB
  rpc Text(WLURequest) returns (WLUResponse);
}

message WLURequest {
  string language_code = 1;
  string text = 2;
}

message WLUResponse {
  repeated WLUSegment segments = 1;
}

message WLUSegment {
  string text = 1;
  repeated WLUToken tokens = 2;
  repeated WLUEntity entities = 3;
  WLUIntent intent = 4;
}

message WLUToken {
  string word = 1;
  int32 index = 2;
}

message WLUEntity {
  string entity = 1;
  string value = 2;
  int32 start_position = 3;
  int32 end_position = 4;
}

message WLUIntent {
  string intent = 1;
}
